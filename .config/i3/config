set $mod Mod4
set $term kitty
set $monitor0="HDMI-1"
set $monitor1="DP-2"

font pango:Inconsolata 11

# Execute custom script at the start of the session
exec --no-startup-id $HOME/.scripts/init.sh
exec --no-startup-id nitrogen --restore
# exec_always nitrogen --restore
# Open terminal
# bindsym $mod+Return exec $term
# Control volume 
bindsym $mod+equal exec amixer set Master 5%+
bindsym $mod+minus exec amixer set Master 5%-
# Open menu (fzf scripts)
# bindsym $mod+r exec xterm -class float -geometry 80x40 -e sh $HOME/.scripts/menu/menu.sh
bindsym $mod+r exec alacritty -e sh -c "bash $HOME/.scripts/fzf/startmenu.sh"

# Take screenshots
bindsym $mod+Print exec flameshot gui
bindsym $mod+e exec emacsclient -c -a 'emacs'
# Control brightness
bindsym $mod+Control+equal exec light -A 5
bindsym $mod+Control+minus exec light -U 5
# Control music player
# Go to next song
bindsym $mod+Shift+equal exec strawberry -f
# Go to previous song
bindsym $mod+Shift+minus exec strawberry -r
# Pause music
bindsym $mod+Shift+space exec strawberry -t
# execute script to switch between monitors and laptop screen (x11)
bindsym $mod+Control+s exec $HOME/.scripts/switch_screens.sh
# execute script to switch between US and SPANISH layout
# bindsym $mod+Shift+l exec $HOME/.scripts/switch_keyboard_layout.sh
# Lock screen with xscreensaver
bindsym $mod+Control+l exec xscreensaver-command -lock
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar
# kill focused window
bindsym $mod+d kill
# create exit mode
mode "exit: [l]ogout, [r]eboot, [s]hutdown" 
{
    bindsym l exec i3-msg exit
    bindsym r exec reboot
    bindsym s exec poweroff
    bindsym Escape mode "default"
    bindsym Return mode "default"
}
# run exit mode
bindsym $mod+Control+e mode "exit: [l]ogout, [r]eboot, [s]hutdown"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
#bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# split in horizontal orientation
#bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
#bindsym $mod+e layout toggle split

# toggle tiling / floating
#bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
default_border none 

# dont focus on a new window if a new window appears
# no_focus [window_role="pop-up"]
#for_window [class="$term"] floating enable

set $ws1 "1" 
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws0 "0"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws0

# Terminal
# workspace $ws1 output  $monitor0
assign [class="$term"]$ws1
assign [class="Emacs"]$ws1

# Work space
# workspace $ws2 output  $monitor0
assign [class="VSCodium"]$ws2
assign [class="QOwnNotes"]$ws2
assign [class="libreoffice"]$ws2

# Web browsing
# workspace $ws3 output  $monitor1
assign [class="librewolf"]$ws3
assign [class="firefox-esr"]$ws3
assign [class="Brave-browser"]$ws3
assign [class="Tor Browser"]$ws3

# File manager and document & video viewers
# workspace $ws5 output  $monitor1
assign [class="Nemo"]$ws5
assign [class="dolphin"]$ws5
assign [class="calibre"]$ws5
assign [class="Zathura"]$ws5
assign [class="okular"]$ws5
assign [class="mpv"]$ws5
assign [class="FreeTube"]$ws5


# Mail and chat clients
# workspace $ws6 output  $monitor0
assign [class="tutanota-desktop"]$ws6
assign [class="thunderbird"]$ws6
assign [class="hexchat"]$ws6
assign [class="signal"]$ws6
assign [class="Net.sourceforge.liferea"]$ws6
assign [class="Whatsapp-for-linux"]$ws6

# Password manager
# workspace $ws7 output  $monitor0
assign [class="bitwarden"]$ws7
assign [class="authenticator"]$ws7
assign [class="keepassxc"]$ws7
assign [class="seahorse"]$ws7

# Music
# workspace $ws8 output  $monitor0
for_window [class="Spotify"] move to workspace $ws8
assign [class="strawberry"]$ws8
assign [class="easyeffects"]$ws8

# Downloads programs
# workspace $ws9 output  $monitor0
assign [class="qBittorrent"]$ws9
assign [class="amule"]$ws9
assign [class="clipgrab"]$ws9
assign [class="org.nicotine_plus.Nicotine"]$ws9

# Virtual machines
# workspace $ws0 output  $monitor0
assign [class="Virt-manager"]$ws0



# Bind workspaces to specific monitors

focus_on_window_activation focus
#focus_on_window_activation smart
workspace_auto_back_and_forth no 

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

bindsym $mod+Control+r reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart


# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym j resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym l resize shrink height 10 px or 10 ppt
    bindsym semicolon resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    # bindsym $mod+r mode "default"
}

# Launch polybar
#exec_always --no-startup-id $HOME/.scripts/launch_polybar.sh

bar {
	font pango:Inconsolata 11
	position top
	tray_output none
	status_command $HOME/.config/i3/bumblebee-status/bumblebee-status \
        -m spacer pamixer memory battery date time \
		-p spacer.text="                                                                                                                                                          " \
        pulsectl.autostart = true time.format="%H:%M " date.format="%a, %b %d %Y"  memory.format='{used}'\
		-t gruvbox-powerline
}

# i3bar
# bar {
    # position top
    # mode dock
    # tray_output primary
    # tray_padding 4
    # # font pango:Nouveau Ibm 14
    # font pango:3270 Nerd Font Mono 16
    # separator_symbol " "
    # strip_workspace_numbers yes
    # status_command i3blocks
#}

# bindsym $mod+r mode "resize"
